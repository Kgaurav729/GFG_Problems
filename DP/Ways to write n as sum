 task is to find the number of different ways in which n can be written as a sum of two or more positive integers. Return the answer with the modulo 109+7.

Examples:

Input: n = 5
Output: 6
Explanation: 1+1+1+1+1, 1+1+1+2, 1+1+3, 1+4, 2+1+2 and 2+3. So, a total of 6 ways.
Input: n = 3
Output: 2
Explanation: 1+1+1 and 1+2.  So, a total of 6 ways.
Expected Time Complexity: O(n^2)
Expected Auxiliary Space: O(n)

Constraints:
1 <= n <= 103




//{ Driver Code Starts
// Initial Template for C++

// } Driver Code Ends


class Solution {
  public:
    // Function to count the number of different ways in which n can be
    // written as a sum of two or more positive integers.
    int countWays(int n) {
        // your code here 
        int table[n+1];
        for(int i=0;i<n+1;i++){
            table[i]=0;
        }
        table[0]=1;
        for(int i=1;i<n;i++){
            for(int j=i;j<=n;j++){
                table[j]+=table[j-i];
            }
        }
        return table[n];
        
        
    }
}

//{ Driver Code Starts.
#include <bits/stdc++.h>
#include <string.h>
using namespace std;

//Position this line where user code will be pasted.

int main() {
    string ts;
    getline(cin, ts);
    int t = stoi(ts);
    while (t--) {
        string ns;
        getline(cin, ns);
        int n = stoi(ns);
        Solution obj;
        int res = obj.countWays(n);
        cout << res << endl;
        // cout << "~" << endl;
        // string tl;
        // getline(cin, tl);
    }
    return 0;
}

// } Driver Code Ends
